@import "tailwindcss";
@import "tw-animate-css";
@import "../styles/prism-tomorrow.css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }

  /* --- DEFINITIVE Prose Styling for All Markdown Elements --- */
  .prose {
    @apply max-w-none text-foreground;
  }
  /* --- Vertical Rhythm --- */
  .prose
    :where(> :first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    @apply mt-0;
  }
  .prose
    :where(> :last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    @apply mb-0;
  }

  /* --- Headings (h1-h6) --- */
  .prose
    :where(h1, h2, h3, h4, h5, h6):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    @apply font-bold tracking-tight text-foreground;
  }
  .prose :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 2.25em;
    @apply mt-2 mb-6 border-b pb-2;
  }
  .prose :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.875em;
    @apply mt-2 mb-5 border-b pb-2 font-semibold;
  }
  .prose :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.5em;
    @apply mt-2 mb-4 font-semibold;
  }
  .prose :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.25em;
    @apply mt-2 mb-3 font-semibold;
  }
  .prose :where(h5):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.125em;
    @apply mt-2 mb-2 font-semibold;
  }
  .prose :where(h6):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1em;
    @apply mt-2 mb-2 font-semibold text-muted-foreground;
  }

  /* --- Body Text, Emphasis & Links --- */
  .prose :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply leading-7 mb-4 text-foreground/90;
  }
  .prose :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply text-primary underline underline-offset-4 hover:text-primary/90 font-medium;
  }
  .prose
    :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply font-semibold text-foreground;
  }
  .prose
    :where(em, i):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply italic;
  }

  /* --- Lists (Ordered & Unordered) --- */
  .prose
    :where(ul, ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply mb-5 px-6;
  }
  .prose :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply list-disc;
  }
  .prose :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply list-decimal;
  }
  .prose :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply mb-2;
  }
  /* Handle spacing for nested lists */
  .prose
    :where(li > ul, li > ol):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    @apply mt-2;
  }

  /* --- Checkbox List --- */
  .prose
    :where(li.task-list-item):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    @apply list-none pl-1;
  }
  .prose
    :where(input[type="checkbox"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    @apply h-4 w-4 rounded-sm border border-muted-foreground mr-2 align-middle;
    pointer-events: none;
  }
  .prose
    :where(input[type="checkbox"]:checked):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    @apply bg-primary border-primary;
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
  }

  /* --- Blockquotes --- */
  .prose
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    @apply mt-6 mb-6 border-s-4 ps-4 italic text-muted-foreground;
  }
  /* Style for nested blockquotes */
  .prose
    :where(blockquote > blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    @apply mt-4 border-s-primary/70 ps-4;
  }

  /* --- Images & Tables --- */
  .prose :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply my-2 inline-block rounded-sm border bg-muted;
  }
  .prose
    :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply my-6 w-full overflow-hidden rounded-lg border;
  }
  .prose
    :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply border-b bg-muted;
  }
  .prose :where(th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply px-4 py-2 text-start font-bold;
  }
  .prose
    :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply border-b border-muted transition-colors hover:bg-muted/50;
  }
  .prose :where(td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply px-4 py-2;
  }

  /* --- Code (Inline & Block) --- */
  .prose
    :where(code):not(
      :where(pre *, [class~="not-prose"], [class~="not-prose"] *)
    ) {
    @apply relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm font-semibold;
  }
  .prose :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply mb-4 mt-6 overflow-x-auto rounded-lg p-4;
  }

  /* --- Horizontal Rules --- */
  .prose :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    @apply my-8 border-border;
  }
}
